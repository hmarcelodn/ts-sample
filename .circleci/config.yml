---
version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.6.1
        environment:
          IMAGE_NAME: marcelo_delnegro/sample
    working_directory: ~/repo
    steps:
      - checkout   
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          - v1-dependencies-
      - run:
          name: Install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt            
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build and Push Docker Image
          command: |
            docker login quay.io -u $QUAY_USERNAME -p $QUAY_PASSWORD
            docker build -t quay.io/$IMAGE_NAME:$CIRCLE_SHA1 .            
            docker push quay.io/$IMAGE_NAME:$CIRCLE_SHA1
  deploy_development:
    docker:
      - image: quay.io/marcelo_delnegro/ts-docker-deployment-dev
        auth:
          username: $QUAY_USERNAME
          password: $QUAY_PASSWORD
        environment:
          S3_BUCKET: s6-kubernetes-charts
          HELM_REPO_NAME: s6
          HELM_CHART_NAME: ts-backend-chart
          RELEASE_NAME: sample
          RELEASE_NAMESPACE: default
          RELEASE_SUFFIX: dev
    steps:
      - checkout   
      - run:
          name: Deploying to Development Environment
          command: |
            helm init --client-only
            helm plugin install https://github.com/hypnoglow/helm-s3.git
            helm repo add s6 s3://${S3_BUCKET}
            helm repo update

            export RELEASE=$RELEASE_NAME_$RELEASE_SUFFIX
            export DEPLOYS=$(helm ls --namespace $RELEASE_NAMESPACE | grep $RELEASE | wc -l)

            if [ ${DEPLOYS}  -eq 0 ]; then
                echo "Installing release ${RELEASE}"
                helm install --name $RELEASE_NAME-$RELEASE_ENVIRONMENT $HELM_REPO_NAME/$HELM_CHART_NAME -f values.yaml --set image.tag=$CIRCLE_SHA1 --namespace $RELEASE_NAMESPACE
            else 
                echo "Upgrading release ${RELEASE}"
                helm upgrade $RELEASE_NAME-$RELEASE_ENVIRONMENT $HELM_REPO_NAME/$HELM_CHART_NAME -f values.yaml --set image.tag=$CIRCLE_SHA1 --namespace $RELEASE_NAMESPACE
            fi    
  deploy_qa:
    docker:
      - image: quay.io/marcelo_delnegro/ts-docker-deployment-dev
        auth:
          username: $QUAY_USERNAME
          password: $QUAY_PASSWORD
        environment:
          S3_BUCKET: s6-kubernetes-charts
          HELM_REPO_NAME: s6
          HELM_CHART_NAME: ts-backend-chart
          RELEASE_NAME: sample
          RELEASE_NAMESPACE: qa
          RELEASE_SUFFIX: qa
    steps:
      - checkout   
      - run:
          name: Deploying to Development Environment
          command: |
            helm init --client-only
            helm plugin install https://github.com/hypnoglow/helm-s3.git
            helm repo add s6 s3://${S3_BUCKET}
            helm repo update

            export RELEASE=$RELEASE_NAME_$RELEASE_SUFFIX
            export DEPLOYS=$(helm ls --namespace $RELEASE_NAMESPACE | grep $RELEASE | wc -l)

            if [ ${DEPLOYS}  -eq 0 ]; then
                echo "Installing release ${RELEASE}"
                helm install --name $RELEASE $HELM_REPO_NAME/$HELM_CHART_NAME -f values.yaml --set image.tag=$CIRCLE_SHA1 --namespace $RELEASE_NAMESPACE
            else 
                echo "Upgrading release ${RELEASE}"
                helm upgrade $RELEASE $HELM_REPO_NAME/$HELM_CHART_NAME -f values.yaml --set image.tag=$CIRCLE_SHA1 --namespace $RELEASE_NAMESPACE
            fi  
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy_development:
          requires:
            - build
      - approval_qa:
          type: approval        
      - deploy_qa:
          requires:
            - build
            - deploy_development
            - approval_qa